[[- if .Values.wcIpCheck.enabled ]]
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: [[ .Release.Name ]]-check-wc-cp-ip
  annotations:
    policies.kyverno.io/title: Block cluster resource creation if IP for control plane is not comming from a pre-defined range.
    policies.kyverno.io/description: We want to block the creation of workload clusters (WC) in case they use statically selected IP from
     a range that does not belong to the related management cluster. This should prevent IP clashes of WC's control-planes.
spec:
  validationFailureAction: [[ .Values.wcIpCheck.validationFailureAction ]]
  rules:
    - name: check-wc-cp-ip-clusters
      exclude:
        any:
        [[- if (.Values.wcIpCheck.exclude).names ]]
        - resources:
            kinds:
            [[- range .Values.wcIpCheck.infraClusterNames ]]
            - [[ . | quote ]]
            [[- end ]]
            names:
            [[- range .Values.wcIpCheck.exclude.names ]]
            - [[ . | quote ]]
            [[- end ]]
        [[- end ]]
        - resources:
            kinds:
            [[- range .Values.wcIpCheck.infraClusterNames ]]
            - [[ . | quote ]]
            [[- end ]]
            annotations:
              policies.kyverno.io/check-wc-cp-ip: exclude
      match:
        all:
        - resources:
            kinds:
            [[- range .Values.wcIpCheck.infraClusterNames ]]
            - [[ . | quote ]]
            [[- end ]]
      context:
        - name: wcAllowedIpsCm
          configMap:
            name: [[ .Release.Name ]]-wc-allowed-ips
            namespace: "[[ $.Release.Namespace ]]"
        - name: kubeadmConfig
          configMap:
            name: kubeadm-config
            namespace: kube-system
        - name: clusterConfiguration
          variable:
            value: [[`"[[ kubeadmConfig.data.ClusterConfiguration | parse_yaml(@) ]]"`]]
        - name: allowedIps
          variable:
            value: [[`"[[ wcAllowedIpsCm.data.\"allowed-ips\" | parse_yaml(@) ]]"`]]
        - name: apiEndpoint
          variable:
            value: [[`"[[ clusterConfiguration.controlPlaneEndpoint | split(@, ':') | [0] ]]"`]]
        - name: mcClusterName
          variable:
            value: [[`"[[ clusterConfiguration.clusterName ]]"`]]
      preconditions:
        all:
        - key: [[`"[[ request.object.spec.controlPlaneEndpoint.host ]]"`]]
          operator: NotEquals
          value: ""
      validate:
        message: |
          IP for workload cluster's conrol plane ([[`"[[ request.object.spec.controlPlaneEndpoint.host ]]"`]])
          is not from the following IP segment:
          [[- with .Values.wcIpCheck ]]
          [[- range .ipRanges ]]
            - [[- .start ]] - [[- .end ]]
          [[- end ]]
          [[- if .deriveFromControlPlaneEndpoint.enabled ]]
          [[- with .deriveFromControlPlaneEndpoint ]]
            - ([[`"[[ apiEndpoint ]]"`]] + [[ .offset ]]) - ([[`"[[ apiEndpoint ]]"`]] + [[ .offset ]] + [[ .number ]])
          [[- end ]]
          [[- end ]]
          [[- end ]]
        deny:
          conditions:
            all:
            - key: [[`"[[ request.object.spec.controlPlaneEndpoint.host ]]"`]]
              operator: NotIn
              value: [[`"[[ allowedIps ]]"`]]
            - key: [[`"[[ request.object.metadata.name ]]"`]]
              operator: NotEquals
              value: [[`"[[ mcClusterName ]]"`]]
---
[[- end ]]
