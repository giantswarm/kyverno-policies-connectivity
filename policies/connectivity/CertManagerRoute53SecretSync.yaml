[[- if .Values.certManager.syncSecret ]]
# create/update secret sync-cert-manager-route53-secret
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "[[ .Release.Name ]]-sync-cert-manager-route53-secret"
  annotations:
    [[- include "preinstallHookAnnotations" $ | nindent 4 ]]
    "helm.sh/hook-weight": "-2"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "update", "get", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "[[ .Release.Name ]]-sync-cert-manager-route53-secret"
  annotations:
    [[- include "preinstallHookAnnotations" $ | nindent 4 ]]
    "helm.sh/hook-weight": "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "[[ .Release.Name ]]-sync-cert-manager-route53-secret"
subjects:
- kind: ServiceAccount
  name: kyverno-background-controller
  namespace: kyverno
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: sync-cert-manager-route53-secret
spec:
  rules:
  - name: sync-cert-manager-route53-secret
    match:
      any:
      - resources:
          kinds:
          - Namespace
          names:
          - "[[ .Values.certManager.targetNamespace ]]"
    generate:
      apiVersion: v1
      kind: Secret
      name: "[[ .Values.cluster.name ]]-cert-manager-user-secrets"
      namespace: [[`"[[request.object.metadata.name]]"`]]
      synchronize: true
      clone:
        namespace: "[[ .Values.certManager.sourceNamespace ]]"
        name: "[[ .Values.cluster.name ]]-cert-manager-user-secrets"
[[- end ]]
